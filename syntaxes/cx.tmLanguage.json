{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "calyxium",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#builtin-types"
        },
        {
            "include": "#control-statements"
        },
        {
            "include": "#variable-declarations"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.hashtag.cx",
                    "match": "#.*$"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.cx",
                    "match": "\\b(\\+\\+|--|\\+|-|\\*|/|&&|\\|\\||!=|==|<=|>=|<|>|!|\\|&)\\b"
                },
                {
                    "name": "keyword.operator.assignment.cx",
                    "match": "\\b(\\+=|-=|\\*=|/=|=)\\b",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.assignment.cx"
                        }
                    }
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.cx",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.cx",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.cx",
                    "match": "\\b(\\d+(\\.\\d+)?)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.cx",
                    "match": "\\b(function|if|else|return|let|const|case|true|false|try|catch|for|switch|default|import|class|new)\\b"
                }
            ]
        },
        "builtin-types": {
            "patterns": [
                {
                    "name": "storage.type.builtin-types.cx",
                    "match": "\\b(int|float|string|bool|any)\\b"
                }
            ]
        },
        "control-statements": {
            "patterns": [
                {
                    "name": "keyword.control.cx",
                    "match": "\\b(if|else|for|switch)\\b"
                }
            ]
        },
        "variable-declarations": {
            "patterns": [
                {
                    "name": "variable.other.declaration-cx",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*:?=)",
                    "captures": {
                        "1": {
                            "name": "variable.other.declaration-cx.name"
                        }
                    }
                }
            ]
        }
    },
    "colors": {
        "math": "#FF00FF",
        "keyword.operator.assignment.cx": "#FF0000",
        "storage.type.declaration-ident.cx": "#0072C6",
        "storage.type.builtin-types.cx": "#8c1aff"
    },
    "scopeName": "source.cx"
  }

